(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{757:function(t,s,a){"use strict";a.r(s);var e=a(5),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"自定义网络格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义网络格式"}},[t._v("#")]),t._v(" 自定义网络格式")]),t._v(" "),a("p",[t._v("[toc]")]),t._v(" "),a("h2",{attrs:{id:"docker-link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-link"}},[t._v("#")]),t._v(" docker link")]),t._v(" "),a("blockquote",[a("p",[t._v("这个是一个过时的东西了")])]),t._v(" "),a("h2",{attrs:{id:"before"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#before"}},[t._v("#")]),t._v(" before")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker run -d -p 8081:8080   --name tomcat81 billygoo/tomcat8-jdk8\ndocker run -d -p 8082:8080   --name tomcat82 billygoo/tomcat8-jdk8\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("上述成功启动并用docker exec进入各自容器实例内部")])]),t._v(" "),a("h2",{attrs:{id:"在tomcat82中ping-tomcat81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在tomcat82中ping-tomcat81"}},[t._v("#")]),t._v(" 在tomcat82中ping tomcat81")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("root@ubuntu:/home/smile"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker exec -it tomcat82 bash")]),t._v("\nroot@518bce78283a:/usr/local/tomcat"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip addr")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": lo: "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LOOPBACK,UP,LOWER_UP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),t._v(" qdisc noqueue state UNKNOWN group default qlen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1/8 scope "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" lo\n       valid_lft forever preferred_lft forever\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(": eth0@if27: "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc noqueue state UP group default \n    link/ether 02:42:ac:11:00:06 brd ff:ff:ff:ff:ff:ff link-netnsid "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    inet "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.6/16 brd "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".255.255 scope global eth0\n       valid_lft forever preferred_lft forever\nroot@518bce78283a:/usr/local/tomcat"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ping 172.17.0.5")]),t._v("\nPING "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.5 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("84")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" bytes of data.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.5: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.56")]),t._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.5: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.110")]),t._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.5: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.106")]),t._v(" ms\n^C\n--- "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.17")]),t._v(".0.5 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),t._v(" statistics ---\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" packets transmitted, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" received, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("% packet loss, "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" 2018ms\nrtt min/avg/max/mdev "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.106")]),t._v("/0.927/2.565/1.158 ms\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("p",[a("strong",[t._v("能ping通")])]),t._v(" "),a("p",[a("strong",[t._v("同样反也能通")])]),t._v(" "),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("p",[a("strong",[t._v("在docker中ip是变化的，所以我们选择用容器名称去ping通")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("root@98ec1a7378a7:/usr/local/tomcat# ping tomcat82\nping: tomcat82: Name or service not known\nroot@98ec1a7378a7:/usr/local/tomcat# ping tomcat81\nping: tomcat81: Name or service not known\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("或者可以选择添加hosts映射，但是注意，映射的时候ip也是写死的，所以我们必须要按照服务名去ping")])]),t._v(" "),a("h2",{attrs:{id:"after自定义网络引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#after自定义网络引入"}},[t._v("#")]),t._v(" after自定义网络引入")]),t._v(" "),a("p",[a("strong",[t._v("自定义桥接网络,自定义网络默认使用的是桥接网络bridge")])]),t._v(" "),a("h2",{attrs:{id:"新建自定义网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建自定义网络"}},[t._v("#")]),t._v(" 新建自定义网络")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker network create xiongxinwei@mail_network\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("查看网络：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("root@ubuntu:/text# docker network ls\nNETWORK ID     NAME                       DRIVER    SCOPE\nec8278ac6963   bridge                     bridge    local\nc68651290784   host                       host      local\n5e7ee4274242   none                       null      local\n6c8b594b19ad   xiongxinwei@mail_network   bridge    local\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("strong",[t._v("我们需要把tomcat81和tomcat81统统加入到自定义网络来保证服务名互相通信")])]),t._v(" "),a("h2",{attrs:{id:"新建容器加入自定义网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建容器加入自定义网络"}},[t._v("#")]),t._v(" 新建容器加入自定义网络")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker run -d -p 8081:8080 --network xiongxinwei@mail_network  --name tomcat81 billygoo/tomcat8-jdk8\ndocker run -d -p 8082:8080 --network xiongxinwei@mail_network  --name tomcat82 billygoo/tomcat8-jdk8\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2022/05/15/s29kbCmWy4jeinp.png",alt:"image-20220515124337089"}})]),t._v(" "),a("h2",{attrs:{id:"已经存在的容器修改为自定义网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已经存在的容器修改为自定义网络"}},[t._v("#")]),t._v(" 已经存在的容器修改为自定义网络")]),t._v(" "),a("p",[t._v("创建容器时不指定网络时默认是桥接网络，后续更改容器的网络有两种方式：")]),t._v(" "),a("p",[a("strong",[t._v("第一种：停止并删掉容器，重新创建容器指定网络连接（不建议）")])]),t._v(" "),a("p",[a("strong",[t._v("第二种：直接修改容器的网络")])]),t._v(" "),a("ol",[a("li",[t._v("创建自定义网络")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker network create 网络名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("解除容器所绑定的现有网络")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker network disconnect 网络名称 容器名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("容器重新指定网络连接")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker network connect 网络名称 容器名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("重启容器")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker restart 容器名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("查看容器详细信息")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker inspect 容器名称\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"docker-下创建自定义网络-并在运行容器时绑定网络和ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-下创建自定义网络-并在运行容器时绑定网络和ip"}},[t._v("#")]),t._v(" docker 下创建自定义网络，并在运行容器时绑定网络和ip")]),t._v(" "),a("p",[t._v("Docker安装后，默认会创建三种网络类型，bridge、host和none，可通过如下命令查看")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("　　docker network ls \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://sm.nsddd.top//typora/720144-20210209104212204-1769428363.png?mail:3293172751@qq.com",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"bridge-网络桥接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bridge-网络桥接"}},[t._v("#")]),t._v(" bridge:网络桥接")]),t._v(" "),a("p",[t._v("默认情况下启动、创建容器都是用该模式，所以每次Docker容器重启时会按照顺序获取对应ip地址，这就导致容器每次重启，ip都发生变化")]),t._v(" "),a("h3",{attrs:{id:"none-无指定网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#none-无指定网络"}},[t._v("#")]),t._v(" none：无指定网络")]),t._v(" "),a("p",[t._v("启动容器时，可以通过"),a("code",[t._v("–network=none")]),t._v("，Docker容器不会分配局域网ip")]),t._v(" "),a("h3",{attrs:{id:"host-主机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host-主机网络"}},[t._v("#")]),t._v(" host：主机网络")]),t._v(" "),a("p",[t._v("Docker容器的网络会附属在主机上，两者是互通的。")]),t._v(" "),a("h3",{attrs:{id:"创建自定义网络和固定ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义网络和固定ip"}},[t._v("#")]),t._v(" 创建自定义网络和固定ip")]),t._v(" "),a("p",[t._v("创建自定义网络类型，并且指定网段")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create --driver"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bridge --gateway"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.1 --subnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.0/16 mynetwork\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("--driver")]),t._v("：驱动程序类型")]),t._v(" "),a("li",[a("code",[t._v("--subnet")]),t._v("：代表网段的CIDR格式的子网")]),t._v(" "),a("li",[a("code",[t._v("--gateway")]),t._v("：主子网的IPV4和IPV6的网关")]),t._v(" "),a("li",[a("code",[t._v("mynetwork")]),t._v("：是自定义网络名称")])]),t._v(" "),a("p",[a("strong",[t._v("通过docker network ls可以查看到网络类型中多了一个mynetwork")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network inspect mynetwork\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("使用docker network inspect mynetwork 查看网络信息")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://sm.nsddd.top//typora/720144-20210209105133125-1384179463.png?mail:3293172751@qq.com",alt:"img"}})]),t._v(" "),a("p",[t._v("使用新的网络类型创建并启动容器")]),t._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[t._v("docker run -d --name=consul -p 8500:8500 \\\n--net=mynetwork --ip=192.168.0.2 \\\n-e CONSUL_BIND_INTERFACE=eth0 \\\n--restart=always consul agent \\\n--server=true --bootstrap-expect=1 --client=0.0.0.0 -ui\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"自定义网络命令和介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义网络命令和介绍"}},[t._v("#")]),t._v(" 自定义网络命令和介绍")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("自定义网络命令")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("docker network create")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("创建自定义网络")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("docker network inspect")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查看自定义网络详情")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("docker network ls")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查看网络列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("docker network connect")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不同的自定义网络互相连接")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("docker network rm")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除自定义网络")])])])]),t._v(" "),a("p",[a("strong",[t._v("我们尝试查看一下自定义网络详情")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://sm.nsddd.top//typora/image-20220916205821816.png?mail:3293172751@qq.com",alt:"image-20220916205821816"}})]),t._v(" "),a("h2",{attrs:{id:"查看tomcat81的ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看tomcat81的ip"}},[t._v("#")]),t._v(" 查看tomcat81的ip")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("root@ubuntu:/text# docker exec -it tomcat81 bash\nroot@83cabf17ff0b:/usr/local/tomcat# ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n33: eth0@if34: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.2/16 brd 172.18.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"登陆tomcat82并ping-tomcat81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登陆tomcat82并ping-tomcat81"}},[t._v("#")]),t._v(" 登陆tomcat82并ping tomcat81")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("root@ubuntu:/home/smile# docker exec -it tomcat82 bash\nroot@394fa3fe7ecc:/usr/local/tomcat# ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n35: eth0@if36: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:12:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.3/16 brd 172.18.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\nroot@394fa3fe7ecc:/usr/local/tomcat# ping tomcat81\nPING tomcat81 (172.18.0.2) 56(84) bytes of data.\n64 bytes from 172.18.0.2 (172.18.0.2): icmp_seq=1 ttl=64 time=1.21 ms\n64 bytes from 172.18.0.2 (172.18.0.2): icmp_seq=2 ttl=64 time=0.110 ms\n^C\n--- tomcat81 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 0.110/0.660/1.211/0.551 ms\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[a("strong",[t._v("可以ping通了")])]),t._v(" "),a("p",[a("strong",[t._v("所以我们做多个容器的规划，一定要走容器名")])]),t._v(" "),a("h2",{attrs:{id:"结论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("自定义网络本身就维护好了主机名和ip的对应关系（ip和域名都能通）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("自定义网络本身就维护好了主机名和ip的对应关系（ip和域名都能通）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("自定义网络本身就维护好了主机名和ip的对应关系（ip和域名都能通）")])])])]),t._v(" "),a("p",[a("strong",[t._v("自定义网络可以在容器之间提供自动的DNS解析")])])])}),[],!1,null,null,null);s.default=r.exports}}]);